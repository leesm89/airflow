{"timestamp":"2025-08-06T12:44:19.370294","level":"info","event":"DAG bundles loaded: dags_2, dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-06T12:44:19.370497","level":"info","event":"Filling up the DagBag from /opt/airflow/dags_2/dags_simple_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-06T12:44:19.439016Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.439146Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.439241Z","level":"info","event":"Current task name:simple_task1","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.439307Z","level":"info","event":"Dag name:dags_simple_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.439798Z","level":"info","event":"::group::show context variables","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440056Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440097Z","level":"info","event":" 'dag': <DAG: dags_simple_dag>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440147Z","level":"info","event":" 'dag_run': DagRun(dag_id='dags_simple_dag', run_id='scheduled__2025-08-06T12:40:00+00:00', logical_date=datetime.datetime(2025, 8, 6, 12, 40, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2025, 8, 6, 12, 40, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2025, 8, 6, 12, 40, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2025, 8, 6, 12, 40, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 8, 6, 12, 44, 18, 365558, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440185Z","level":"info","event":" 'data_interval_end': DateTime(2025, 8, 6, 12, 40, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440223Z","level":"info","event":" 'data_interval_start': DateTime(2025, 8, 6, 12, 40, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440258Z","level":"info","event":" 'ds': '2025-08-06',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440290Z","level":"info","event":" 'ds_nodash': '20250806',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440320Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440352Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440383Z","level":"info","event":" 'logical_date': DateTime(2025, 8, 6, 12, 40, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440413Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440446Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440477Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0xffff64078ce0>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440507Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.440547Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444485Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0xffff63169340 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0xffff62cdf6a0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444618Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0xffff63168a40 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0xffff62cdf560>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444707Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0xffff64076f60 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0xffff62cdf4c0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444770Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0xffff64077620 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0xffff62cce520>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444827Z","level":"info","event":" 'run_id': 'scheduled__2025-08-06T12:40:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444885Z","level":"info","event":" 'task': <Task(_PythonDecoratedOperator): simple_task1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444935Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('01987f69-3637-7ff6-b506-5bb6fa14afe6'), task_id='simple_task1', dag_id='dags_simple_dag', run_id='scheduled__2025-08-06T12:40:00+00:00', try_number=1, map_index=-1, hostname='042f37798c80', context_carrier={}, task=<Task(_PythonDecoratedOperator): simple_task1>, bundle_instance=LocalDagBundle(name=dags_2), max_tries=0, start_date=datetime.datetime(2025, 8, 6, 12, 44, 18, 565557, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/dags_simple_dag/runs/scheduled__2025-08-06T12%3A40%3A00%2B00%3A00/tasks/simple_task1?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444994Z","level":"info","event":" 'task_instance_key_str': 'dags_simple_dag__simple_task1__20250806',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445059Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445128Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445203Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('01987f69-3637-7ff6-b506-5bb6fa14afe6'), task_id='simple_task1', dag_id='dags_simple_dag', run_id='scheduled__2025-08-06T12:40:00+00:00', try_number=1, map_index=-1, hostname='042f37798c80', context_carrier={}, task=<Task(_PythonDecoratedOperator): simple_task1>, bundle_instance=LocalDagBundle(name=dags_2), max_tries=0, start_date=datetime.datetime(2025, 8, 6, 12, 44, 18, 565557, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/dags_simple_dag/runs/scheduled__2025-08-06T12%3A40%3A00%2B00%3A00/tasks/simple_task1?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445253Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445304Z","level":"info","event":" 'ts': '2025-08-06T12:40:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445351Z","level":"info","event":" 'ts_nodash': '20250806T124000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445397Z","level":"info","event":" 'ts_nodash_with_tz': '20250806T124000+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445448Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445496Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.445541Z","level":"info","event":"::endgroup::","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.444777","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-08-06T12:44:19.451952Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.452032Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-06T12:44:19.452089Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): simple_task1>","chan":"stdout","logger":"task"}
